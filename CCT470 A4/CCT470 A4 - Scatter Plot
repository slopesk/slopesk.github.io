<!DOCTYPE html>
<meta charset="utf-8">

<!-- Load d3.js -->
<script src="https://d3js.org/d3.v4.js"></script>

<!-- Style -->
<style>
	.container {font-family: Arial; width: 50%; font-size: 12px;}
	#footnotes {font-size: 10px;}
</style>

<!-- Create a div where the graph will take place -->
<div class="container"><h2>Board Games by Number of Players and Rating</h2>
	<div id="my_dataviz">
		<div>
		<p>This scatter plot visualizes the relationship between the number of players for 34 different board games and each of their ratings. Does a relationship between sheer player numbers and high rating achievement exist? </p>
		</div>
		

	<script>

	// set the dimensions and margins of the graph
	var margin = {top: 10, right: 30, bottom: 30, left: 60},
	    width = 800 - margin.left - margin.right,
	    height = 400 - margin.top - margin.bottom;

	// append the svg object to the body of the page
	var svg = d3.select("#my_dataviz")
	  .append("svg")
	    .attr("width", width + margin.left + margin.right)
	    .attr("height", height + margin.top + margin.bottom)
	  .append("g")
	    .attr("transform",
	          "translate(" + margin.left + "," + margin.top + ")");

	//Read the data
	d3.csv("https://raw.githubusercontent.com/slopesk/D3.js-utm/main/pleaseworkV2.csv", function(data) {

	  // Add X axis
	  var x = d3.scaleLinear()
	    .domain([600, 900])
	    .range([ 0, width ]);
	  svg.append("g")
	    .attr("transform", "translate(0," + height + ")")
	    .call(d3.axisBottom(x));

	  // Add Y axis
	  var y = d3.scaleLinear()
	    .domain([0, 12000])
	    .range([ height, 0]);
	  svg.append("g")
	    .call(d3.axisLeft(y));

	  // Color scale: give me a specie name, I return a color
	  var color = d3.scaleOrdinal()
	    .domain(["AEG", "Blue Orange", "CMON", "Hans im Gluck", "Kosmos", "Lookout Games", "Stonemaier Games"])
	    .range(["#ff0000", "#21908dff", "#990099", "#fde725ff", "#0000ff", "#996633", "#ff3399"])

	  // Highlight the dots in the group that's being hovered above
	  var highlight = function(d){

	    selected_specie = "d.Company" //possible error


	    d3.selectAll("." + selected_specie)
	      .transition()
	      .duration(200)
	      .style("fill", color(selected_specie))
	      .attr("r", 7)

	    d3.selectAll(".dot")
	      .transition()
	      .duration(200)
	      .style("fill", "lightgrey")
	      .attr("r", 5)

	    
	  }

	  var normalize = function(d){ //Written by Cole Chalupka

	    d3.selectAll(".dot")
	   	.transition()
	    .duration(200)
	    .style("fill", function (d) { return color(d.Company) } )
	    .style("stroke", "white")
	    .style("opacity", 1)
	  }

	   // Add a tooltip div. Here I define the general feature of the tooltip: stuff that do not depend on the data point.
	  // Its opacity is set to 0: we don't see it by default.
	  var tooltip = d3.select("#my_dataviz")
	    .append("div")
	    .style("position", "absolute")
	    .style("opacity", 0)
	    .attr("class", "tooltip")
	    .style("background-color", "white")
	    .style("border", "solid")
	    .style("border-width", "1px")
	    .style("border-radius", "5px")
	    .style("padding", "10px")


	  // A function that change this tooltip when the user hover a point.
	  // Its opacity is set to 1: we can now see it. Plus it set the text and position of tooltip depending on the datapoint (d)
	  var mouseover = function(d) {
	    tooltip
	      .style("opacity", 1)
	  }

	  var mousemove = function(d) {
	    tooltip
	      .html("Company: " + d.Company + "<br>" + "# of Players: " + d.NumberofPlayers + "<br>" + "Rating: " + d.Rating)
	      .style("left", (d3.mouse(this)[0]+90) + "px") // It is important to put the +90: other wise the tooltip is exactly where the point is an it creates a weird effect
	      .style("top", (d3.mouse(this)[1]) + "px")
	  }

	  // A function that change this tooltip when the leaves a point: just need to set opacity to 0 again
	  var mouseleave = function(d) {
	    tooltip
	      .transition()
	      .duration(200)
	      .style("opacity", 0)
	  }


	  // Add dots
	  svg.append('g')
	    .selectAll("dot")
	    .data(data.filter(function(d,i){return i<50})) // the .filter part is just to keep a few dots on the chart, not all of them
	    .enter()
	    .append("circle")
	      .attr("cx", function (d) { return x(d.Rating); } )
	      .attr("cy", function (d) { return y(d.NumberofPlayers); } )
	      .attr("class", function (d) { return "dot " + d.Species } )
	      .attr("r", 7)
	      .attr("cx", function (d) { return x(d.Rating); } )
	      .attr("cy", function (d) { return y(d.NumberofPlayers); } )
	      .style("fill", function (d) { return color(d.Company) } )
	      .style("stroke", "white")
	      .style("opacity", 1)
	    //.on("click", highlight) // I could not figure out how to combine the highlight and tooltip functions. I could get all of the dots to shrink and turn grey, but the highlighting function itself never worked. Please imagine that a mouseover a certain color would highlight only the Company of the datapoint being hovered over, while the rest of the dots would fade to grey and shrink. 
	    .on("mouseover", mouseover )
	    .on("mousemove", mousemove )
	    .on("mouseleave", mouseleave, normalize )

	    })

	</script>

	<div><p>All visualized data was sourced from Quercus: <u><a href="https://q.utoronto.ca/courses/175943/files/10584723/download?wrap=1">https://q.utoronto.ca/courses/175943/files/10584723/download?wrap=1</a></u>. Code for the scatter plot itself was obtained through the D3 Graph Gallery: <a href="https://www.d3-graph-gallery.com/">https://www.d3-graph-gallery.com/</a></p></div>
	</div>

</div>